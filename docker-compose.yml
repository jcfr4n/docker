version: '3'
services:
    xnet_web:
        image: nginx:alpine
        container_name: ${NGINX_CONTAINER}
        restart: ${NGINX_RESTART}
        env_file:
            - ".env"
        ports:
            - "${HTTP_PORT}:80"
        environment:
            - PROJECT_NAME=${PROJECT_NAME}
            - NGINX_HOST=${NGINX_HOST}
            - XDEBUG_MODE=${PHP_XDEBUG_MODE}
        command: /bin/sh -c "envsubst '$$NGINX_HOST $$PROJECT_NAME' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;' && find ./code/storage -exec chown www-data:www-data {} \; && find ./code/storage -type f -exec chmod 644 {} \; && find ./code/storage -type d -exec chmod 755 {} \; && find ./code/bootstrap/cache -exec chown www-data:www-data {} \; && find ./code/bootstrap/cache -type f -exec chmod 644 {} \; && find ./code/bootstrap/cache -type d -exec chmod 755 {} \; && composer install && composer dump-autoload"
        networks:
            - ${NETWORK}
        volumes:
            - "${CODE_DIRECTORY}:/var/www/${PROJECT_NAME}"
            - "${NGINX_CONFIG_DIRECTORY}/default.conf:/etc/nginx/conf.d/default.conf"
            - "${NGINX_CONFIG_DIRECTORY}/default.template.conf:/etc/nginx/conf.d/default.template"
            - "${NGINX_CONFIG_DIRECTORY}/client_max_body_size.conf:/etc/nginx/conf.d/client_max_body_size.conf:ro"
            - "${NGINX_LOG_DIRECTORY}:/var/log/nginx"
        depends_on:
            - xnet_php
            - xnet_db

    xnet_php:
        container_name: ${PHP_CONTAINER}
        restart: ${PHP_RESTART}
        env_file:
            - ".env"
        build:
            dockerfile: ${PHP_CONFIG_DIRECTORY}/Dockerfile
            context: .
        networks:
            - ${NETWORK}
        volumes:
            - "${PHP_CONFIG_DIRECTORY}/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "${CODE_DIRECTORY}:/var/www/${PROJECT_NAME}"
    xnet_db:
        image: mysql:${MYSQL_VERSION}
        container_name: ${MYSQL_CONTAINER}
        restart: ${MYSQL_RESTART}
        env_file:
            - ".env"
        build:
            dockerfile: ${MYSQL_DIRECTORY}/Dockerfile
            context: .
        ports:
            - "${MYSQL_PORT}:3306"
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        networks:
            - ${NETWORK}
        volumes:
            - "${MYSQL_DATA_DIRECTORY}:/var/lib/mysql"
            - "${MYSQL_INIT_DB_DIRECTORY}:/docker-entrypoint-initdb.d"
            - "${MYSQL_CONF_DIRECTORY}:/etc/mysql/conf.d"
            - "${MYSQL_LOG_DIRECTORY}:/var/log/mysql"

networks:
    xnet_network: